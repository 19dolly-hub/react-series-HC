import { useState, useCallback, useEffect, useRef } from "react"

function App() {
  // Step 1 : Creating variables using useState hook
  const [length, setLength] = useState(5);
  const [includeNum, setIncludeNum] = useState(false);
  const [includeChar, setIncludeChar] = useState(false);
  const [thePass, setThePass] = useState("");

  // Step 2 : Create the main method to generate the password
  // const generatePass = () => {}
  
  // since this method is going to be called multiple times instead of adding that to each dependency, we will use useCallback, useEffect hook
  const generatePass = useCallback(function() {
    let password = '';
    let string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';

    if(includeNum) string += '0123456789';
    if(includeChar) string += '!@#$%^&*_-+=';

    for (let i = 1; i <= length; i++) {
      let randomCharIndex = Math.floor((Math.random() * string.length) + 1); // + 1 to exclude 0 generated by Math.random()
      password += string.charAt(randomCharIndex);
    }

    setThePass(password);
  }, [length, includeNum, includeChar]);

  // Step 3 : Call the method using useEffect hook
  useEffect(() => generatePass(), [length, includeNum, includeChar, generatePass]);

  // Step 4 : the copy button using the useRef hook
  const thePassRef = useRef(null);
  const copyToClip = useCallback(() => {
    thePassRef.current?.select();
    // thePassRef.current?.setSelectionRange(0, 10);
    window.navigator.clipboard.writeText(thePass);
  }, [thePass]);

  return (
    <>
      <div className="bg-slate-50 text-center mx-3 my-5 p-3 rounded">
        <h2 className="font-bold text-xl">Password Generator</h2>

        <div className="bg-slate-500 p-5 m-3 rounded text-white">
          <div className="py-2">
            <input 
            type="text" 
            readOnly 
            className="rounded text-purple-600 text-center"
            value={thePass}
            placeholder="Password"
            ref={thePassRef}
            />
            <button 
            type="button" 
            className="px-2 mx-1 bg-green-500 rounded"
            onClick={copyToClip}
            >Copy</button>
          </div>

          <input 
          type="range" 
          id="length" 
          className="mx-2 cursor-pointer"
          min={5}
          max={15}
          value={length}
          onChange={e => setLength(e.target.value)}
          />
          <label htmlFor="length">Length: {length}</label>

          <div className="py-2">
            <input 
            type="checkbox" 
            id="numbers" 
            className="mx-2"
            defaultChecked={includeNum}
            onChange={() => setIncludeNum(prev => !prev)}
            />
            <label htmlFor="numbers">Numbers</label>

            <input 
            type="checkbox" 
            id="characters" 
            className="mx-2"
            defaultChecked={includeChar}
            onChange={() => setIncludeChar(prev => !prev)}
            />
            <label htmlFor="characters">Characters</label>
          </div>

          <button 
          type="button"
          className="bg-blue-500 p-1 rounded"
          onClick={generatePass}
          >Generate Password</button>
        </div>
      </div>
    </>
  )
}

export default App
